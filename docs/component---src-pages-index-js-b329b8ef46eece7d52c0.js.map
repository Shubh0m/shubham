{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["postCard","props","react_default","a","createElement","className","style","count","flexWrap","Fragment","paddingLeft","marginTop","node","frontmatter","title","fields","slug","description","gatsby_browser_entry","to","fontWeight","postClass","thumbnail","backgroundImage","childImageSharp","fluid","src","paddingRight","BlogIndex","_ref","location","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","postCounter","layout","seo","keywords","backgroundColor","map","_ref2","key","id","href","__webpack_exports__","query","render","pages_BlogIndex","Object","assign","_3399224544","m","module","exports","require","default","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","gatsby__WEBPACK_IMPORTED_MODULE_1__","Layout","_React$useState","useState","toggleNav","setToggleNav","onClick","aria-label","role","aria-controls","class","target","rel","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-b329b8ef46eece7d52c0.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default (props) => (\n  <article className=\"post-card-wrapper\">\n    <div\n      className=\"row\"\n      style={props.count % 2 === 1 ? { flexWrap: \"wrap-reverse\" } : {}}\n    >\n      {props.count % 2 === 0 && (\n        <>\n          <div className=\"col-6 post-card-info\" style={{ paddingLeft: 120 }}>\n            <div>\n              <h3 style={{ marginTop: 0 }}>\n                {\" \"}\n                {props.node.frontmatter.title || props.node.fields.slug}\n              </h3>\n              <div className=\"post-content-body\">\n                <p>{props.node.frontmatter.description}</p>\n              </div>\n              <Link\n                to={props.node.fields.slug}\n                className=\"post-content-body\"\n                style={{ fontWeight: 700 }}\n              >\n                Read More\n              </Link>\n            </div>\n          </div>\n        </>\n      )}\n      <div className=\"col-6\">\n        <div\n          className={\n            props.count % 2 === 1 ? \"post-card-left\" : \"post-card-right\"\n          }\n        >\n          <article\n            className={`post-card ${props.postClass} ${\n              props.node.frontmatter.thumbnail ? `with-image` : `no-image`\n            }`}\n            style={\n              props.node.frontmatter.thumbnail && {\n                backgroundImage: `url(${props.node.frontmatter.thumbnail.childImageSharp.fluid.src})`,\n              }\n            }\n          >\n            <Link to={props.node.fields.slug} className=\"post-card-link\" />\n          </article>\n        </div>\n      </div>\n      {props.count % 2 === 1 && (\n        <div className=\"col-6 post-card-info\" style={{ paddingRight: \"7vw\" }}>\n          <div>\n            <h3 style={{ marginTop: 0 }}>\n              {\" \"}\n              {props.node.frontmatter.title || props.node.fields.slug}\n            </h3>\n            <div className=\"post-content-body\">\n              <p>{props.node.frontmatter.description}</p>\n            </div>\n            <Link\n              to={props.node.fields.slug}\n              className=\"post-content-body\"\n              style={{ fontWeight: 700 }}\n            >\n              Read More\n            </Link>\n          </div>\n        </div>\n      )}\n    </div>\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Full-stack Developer\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      {/* <Bio /> */}\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">\n            <mark style={{ backgroundColor: \"#e2f0db\" }}>\n              {data.site.siteMetadata.description}\n            </mark>\n          </h2>\n          <figcaption style={{ marginTop: 40 }}>\n            React &nbsp;&nbsp;/&nbsp;&nbsp; Redux &nbsp;&nbsp;/&nbsp;&nbsp;\n            Node.js &nbsp;&nbsp;/&nbsp;&nbsp; Express.js\n            &nbsp;&nbsp;/&nbsp;&nbsp; Gatsby &nbsp;&nbsp;/&nbsp;&nbsp; Python\n            &nbsp;&nbsp;/&nbsp;&nbsp; Firebase &nbsp;&nbsp;/&nbsp;&nbsp; Google\n            Cloud &nbsp;&nbsp;/&nbsp;&nbsp; Google Maps API\n            &nbsp;&nbsp;/&nbsp;&nbsp; PWAs & Service Workers\n            &nbsp;&nbsp;/&nbsp;&nbsp; UI & UX\n          </figcaption>\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n      <section id=\"contact-me\">\n        <hr />\n        <h4 id=\"footer-contact-header\">\n          Want to get in <Link to={`/contact/`}>contact</Link>? Shoot me an\n          email at <a href=\"mailto:stuart@thestu.art\">stuart@thestu.art</a> or\n          connect with me on{\" \"}\n          <a href=\"https://https://www.linkedin.com/in/stuart-william-johnson/LinkedIn\">\n            LinkedIn\n          </a>\n          .\n        </h4>\n      </section>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default (props) => (\n  <StaticQuery\n    query={indexQuery}\n    render={(data) => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = (props) => {\n  const { title, children } = props\n  const [toggleNav, setToggleNav] = React.useState(false)\n  return (\n    <div className={`site-wrapper ${toggleNav ? `site-head-open` : ``}`}>\n      <header className=\"site-head\">\n        <div className=\"site-head-container\">\n          <a\n            className=\"nav-burger\"\n            href={`#`}\n            onClick={() => setToggleNav(!toggleNav)}\n          >\n            <div\n              className=\"hamburger hamburger--collapse\"\n              aria-label=\"Menu\"\n              role=\"button\"\n              aria-controls=\"navigation\"\n            >\n              <div className=\"hamburger-box\">\n                <div className=\"hamburger-inner\" />\n              </div>\n            </div>\n          </a>\n          <nav id=\"swup\" class=\"site-head-left\">\n            <ul className=\"nav\" role=\"menu\">\n              <li className=\"nav-home nav-current\" role=\"menuitem\">\n                <Link to={`/`}>Home</Link>\n              </li>\n              <li className=\"nav-about\" role=\"menuitem\">\n                <Link to={`/contact`}>Contact Me</Link>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"site-head-center\">\n            <Link className=\"site-head-logo\" to={`/`}>\n              {title}\n            </Link>\n          </div>\n          <div className=\"site-head-right\">\n            <div className=\"social-links\">\n              <a\n                href=\"https://www.linkedin.com/in/stuart-william-johnson/\"\n                title=\"LinkedIn\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                LinkedIn\n              </a>\n              <a\n                href=\"https://twitter.com\"\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Github\n              </a>\n              <Link\n                to={`/rss.xml`}\n                title=\"RSS\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                RSS\n              </Link>\n            </div>\n          </div>\n        </div>\n      </header>\n      <main id=\"site-main\" className=\"site-main\">\n        <div id=\"swup\" className=\"transition-fade\">\n          {children}\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}